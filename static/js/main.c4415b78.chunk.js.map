{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","props","state","data","value","code","loading","columnsCombined","total_mv","totalMvColumns","title","dataIndex","handleChange","bind","handleSubmit","getSomeData","event","this","setState","target","preventDefault","fetch","mode","then","response","text","resultdata","JSON","parse","map","item","Math","round","companyName","html","a","parser","DOMParser","doc","parseFromString","abc","Array","from","getElementById","options","filterQuaters","quarterNames","forEach","disabled","innerText","includes","push","Promise","all","url","resp","json","result","combinedResult","columnsCombined1","onFilter","record","indexOf","name","columnsCombined2","columnsCombined3","index","fromLast","length","replace","trim","toUpperCase","sorter","b","quartername","quartername_perChangeInShares","quartername_quarterEndPrice","quartername_per_change_in_quarter_end_price","rows","companyItem","perChange","current_percent_of_portfolio","perChangeInShares","percent_shares_change","quarterEndPrice","quarter_end_price","symbol","perchange","toFixed","numberChange","parseFloat","Object","keys","item1","values","columnsC","className","type","placeholder","onChange","onClick","replaceAll","bordered","pagination","columns","dataSource","dataSrc","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document"],"mappings":"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","file":"static/js/main.c4415b78.chunk.js","sourcesContent":["import React from 'react';\nimport { Table, Input, Space, Button } from 'antd';\n// import Highlighter from 'react-highlight-words';\n// import { SearchOutlined } from '@ant-design/icons';\nimport './App.css';\nimport 'antd/dist/antd.css';\nimport data from './data';\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      value: 'himalaya-capital-management-llc',\n      code: '369213',\n      loading: false,\n      columnsCombined: [],\n      total_mv: [],\n      totalMvColumns: [ {\n        title: 'Quarter',\n        dataIndex: 'quarter_description'\n      }, {\n        title: 'Total Mv',\n        dataIndex: 'total_mv'\n      }]\n    }\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.getSomeData = this.getSomeData.bind(this);\n    \n  }\n\n  handleChange(event) {\n    this.setState({value: event.target.value});\n  }\n\n\n  getSomeData(event) {\n    event.preventDefault();\n\n    this.setState({loading: true})\n\n\n    fetch(`https://whalewisdom.com/filer/get_current_chart_data?filer_id=${this.state.code}`, {mode: 'no-cors'}).then(function (response) {\n      return response.text();\n      }).then((resultdata) => {\n        const data = JSON.parse(resultdata).map((item) => {\n          return {\n            ...item,\n            total_mv: Math.round(item.total_mv / 1000000)\n          }\n        })\n        this.setState({total_mv: data})\n    })\n\n\n    // fetch(`https://whalewisdom.com/filer/get_current_chart_data?filer_id=${this.state.code}`, {mode: 'no-cors'}).then(function (response) {\n    //   // The API call was successful!\n    //   return response.text();\n    // }).then(async (html) => {\n   \n    //     // Convert the HTML string into a document object\n    //     var parser = new DOMParser();\n    //     var doc = parser.parseFromString(html, 'text/html');\n    //     var abc = Array.from(doc.getElementById('quarter_one').options)\n\n    //     let filterQuaters = [];\n    //     let quarterNames = [];\n    //       abc.forEach((item) => {\n    //         if(!item.disabled) {\n    //           if(!item.innerText.includes('Current Combined')) {\n    //             // filterQuaters.push(`https://whalewisdom.com/filer/holdings?id=${companyName}&q1=${item.value}&type_filter=1,2,3,4&symbol=&change_filter=&minimum_ranking=&minimum_shares=&is_etf=0&sc=true&sort=current_mv&order=desc&offset=0&limit=99`)\n    //             //  filterQuaters.push(`https://whalewisdom.com/filer/holdings?id=${companyName}&q1=${item.value}&type_filter=1,2,3,4&sort=current_mv&order=desc&offset=0&limit=100`)\n    //             filterQuaters.push(`https://whalewisdom.com/filer/holdings?id=${companyName}&q1=${item.value}&sort=current_mv&order=desc&offset=0&limit=99`)\n    //             quarterNames.push(item.innerText);\n    //           }\n    //       }\n    //     })\n    // });\n  }\n\n  handleSubmit(event) {\n\n\n    let companyName = this.state.value;\n    event.preventDefault();\n\n    this.setState({loading: true})\n    fetch(`https://whalewisdom.com/filer/${companyName}#tabholdings_tab_link`, {mode: 'no-cors'}).then(function (response) {\n      // The API call was successful!\n      return response.text();\n    }).then(async (html) => {\n   \n      // Convert the HTML string into a document object\n      var parser = new DOMParser();\n      var doc = parser.parseFromString(html, 'text/html');\n      var abc = Array.from(doc.getElementById('quarter_one').options)\n\n      let filterQuaters = [];\n      let quarterNames = [];\n      abc.forEach((item) => {\n          if(!item.disabled) {\n            if(!item.innerText.includes('Current Combined')) {\n              // filterQuaters.push(`https://whalewisdom.com/filer/holdings?id=${companyName}&q1=${item.value}&type_filter=1,2,3,4&symbol=&change_filter=&minimum_ranking=&minimum_shares=&is_etf=0&sc=true&sort=current_mv&order=desc&offset=0&limit=99`)\n              //  filterQuaters.push(`https://whalewisdom.com/filer/holdings?id=${companyName}&q1=${item.value}&type_filter=1,2,3,4&sort=current_mv&order=desc&offset=0&limit=100`)\n              filterQuaters.push(`https://whalewisdom.com/filer/holdings?id=${companyName}&q1=${item.value}&sort=current_mv&order=desc&offset=0&limit=99`)\n              quarterNames.push(item.innerText);\n            }\n        }\n      })\n\n    this.getSomeData(event);\n  \n    // let quarterNames =  [\"Q1 2021 13F Filings \", \"Q4 2020 13F Filings \", \"Q3 2020 13F Filings \", \"Q2 2020 13F Filings \", \"Q1 2020 13F Filings \", \"Q4 2019 13F Filings \", \"Q3 2019 13F Filings \", \"Q2 2019 13F Filings \"]\n      \n      let result = await Promise.all(filterQuaters.map(async url => {\n        const resp = await fetch(url);\n        return resp.json();\n      }));\n\n      let combinedResult = {};\n      let columnsCombined = [ {\n        title: 'Ticker',\n        dataIndex: 'companyName',\n        // sorter: (a, b) => a.companyName.localeComapare(b.companyName),\n        onFilter: (value, record) => record.companyName.indexOf(value) === 0,\n        // ...this.getColumnSearchProps('companyName'),\n      }, {\n        title: 'Company Name',\n        dataIndex: 'name',\n        // sorter: (a, b) => a.name.localeComapare(b.name),\n        onFilter: (value, record) => record.name.indexOf(value) === 0,\n      }];\n      let columnsCombined1 = [...columnsCombined];\n      let columnsCombined2 = [...columnsCombined];\n      let columnsCombined3 = [...columnsCombined];\n\n      \n      // let result = data;\n      result = result.map((item, index) => {\n        const fromLast = result.length - 1 - index;\n        columnsCombined.push({\n          title: quarterNames[fromLast].replace('13F Filings', '').replace(' ', '').trim('').toUpperCase(),\n          dataIndex: quarterNames[fromLast],\n          sorter: (a, b) => a[quarterNames[fromLast]] - b[quarterNames[fromLast]]\n        })\n        columnsCombined1.push({\n          title: quarterNames[fromLast].replace('13F Filings', '').replace(' ', '').trim('').toUpperCase(),\n          dataIndex: `${quarterNames[fromLast].trim()}_perChangeInShares`,\n          sorter: (a, b) => a[`${quarterNames[fromLast]}_perChangeInShares`] - b[`${quarterNames[fromLast]}_perChangeInShares`]\n        })\n        columnsCombined2.push({\n          title: quarterNames[fromLast].replace('13F Filings', '').replace(' ', '').trim('').toUpperCase(),\n          dataIndex: `${quarterNames[fromLast].trim()}_quarterEndPrice`,\n          sorter: (a, b) => a[`${quarterNames[fromLast]}_quarterEndPrice`] - b[`${quarterNames[fromLast]}_quarterEndPrice`]\n        })\n        columnsCombined3.push({\n          title: quarterNames[fromLast].replace('13F Filings', '').replace(' ', '').trim('').toUpperCase(),\n          dataIndex: `${quarterNames[fromLast].trim()}_per_change_in_quarter_end_price`,\n          sorter: (a, b) => a[`${quarterNames[fromLast]}_per_change_in_quarter_end_price`] - b[`${quarterNames[fromLast]}_per_change_in_quarter_end_price`]\n        })\n\n        return {...item, quartername: quarterNames[index], quartername_perChangeInShares: `${quarterNames[index]}_perChangeInShares`,\n        quartername_quarterEndPrice: `${quarterNames[index]}_quarterEndPrice`,  quartername_per_change_in_quarter_end_price: `${quarterNames[index]}_per_change_in_quarter_end_price`}\n      });\n\n      const lastCol = columnsCombined.length - 1;\n     /* columnsCombined.push({\n        title: `% Change in Shares ${columnsCombined[lastCol].title} vs ${columnsCombined[lastCol - 1].title}`,\n        dataIndex: 'perchange',\n        sorter: (a, b) => a.perchange - b.perchange\n      }, {\n        title: `% Change in price ${columnsCombined[lastCol].title} vs ${columnsCombined[lastCol - 1].title}`,\n        dataIndex: 'priceperchange',f\n        sorter: (a, b) => a.priceperchange - b.priceperchange\n      }); */\n\n      result.forEach((item, index) => {\n        const data = item.rows;\n\n        data.forEach((companyItem) => {\n          const perChange = companyItem.current_percent_of_portfolio;\n          const perChangeInShares = companyItem.percent_shares_change;\n          const quarterEndPrice = companyItem.quarter_end_price;\n          if(!combinedResult[companyItem.symbol]) {\n\n            \n            combinedResult[companyItem.symbol] = {\n              companyName: companyItem.symbol, \n              name: companyItem.name && companyItem.name.toUpperCase(), \n              perchange: companyItem.percent_shares_change && companyItem.percent_shares_change.toFixed(1)}\n          }\n\n          let numberChange = (item) => {\n               if(item === null) {\n                 return item;\n               }\n              if(item === 0) {\n                item = '';\n              } else {\n                 item = parseFloat(item).toFixed(1)\n              }\n            return item;\n          }\n\n\n          combinedResult[companyItem.symbol] = {\n            ...combinedResult[companyItem.symbol], \n            [item.quartername]: perChange && perChange.toFixed(1), \n            [`${item.quartername.trim()}_priceChange`]: numberChange(quarterEndPrice),\n            [`${item.quartername.trim()}_perChangeInShares`]: numberChange(perChangeInShares),\n            [`${item.quartername.trim()}_quarterEndPrice`]: numberChange(quarterEndPrice)\n          }\n        });\n        \n      })\n\n      Object.keys(combinedResult).forEach((item) => {\n\n        quarterNames.forEach((item1, index) => {\n          if(combinedResult[item][quarterNames[index]] && combinedResult[item][quarterNames[index + 1]]) { \n                  combinedResult[item] = {\n                    ...combinedResult[item],\n                    [`${quarterNames[index].trim()}_per_change_in_quarter_end_price`]: ((combinedResult[item][`${quarterNames[index].trim()}_priceChange`]/combinedResult[item][`${quarterNames[index+1].trim()}_priceChange`] - 1) * 100).toFixed(1)\n                  }\n           } \n        });\n\n        // if(combinedResult[item][quarterNames[0]] && combinedResult[item][quarterNames[1]]) { \n        //   combinedResult[item] = {\n        //     ...combinedResult[item],\n        //     priceperchange: ((combinedResult[item][`${quarterNames[0].trim()}_priceChange`]/combinedResult[item][`${quarterNames[1].trim()}_priceChange`] - 1) * 100).toFixed(1)\n        //   }\n        // } else {\n        //   delete combinedResult[item].perchange\n        // }\n      })\n      this.setState({data: result, loading: false, combinedResult: Object.values(combinedResult), columnsCombined, columnsCombined1, columnsCombined2, columnsCombined3});      \n\n    })\n\n  }\n\n\n  // getColumnSearchProps = dataIndex => ({\n  //   filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => (\n  //     <div style={{ padding: 8 }}>\n  //       <Input\n  //         ref={node => {\n  //           this.searchInput = node;\n  //         }}\n  //         placeholder={`Search ${dataIndex}`}\n  //         value={selectedKeys[0]}\n  //         onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\n  //         onPressEnter={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\n  //         style={{ marginBottom: 8, display: 'block' }}\n  //       />\n  //       <Space>\n  //         <Button\n  //           type=\"primary\"\n  //           onClick={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\n  //           icon={<SearchOutlined />}\n  //           size=\"small\"\n  //           style={{ width: 90 }}\n  //         >\n  //           Search\n  //         </Button>\n  //         <Button onClick={() => this.handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>\n  //           Reset\n  //         </Button>\n  //         <Button\n  //           type=\"link\"\n  //           size=\"small\"\n  //           onClick={() => {\n  //             confirm({ closeDropdown: false });\n  //             this.setState({\n  //               searchText: selectedKeys[0],\n  //               searchedColumn: dataIndex,\n  //             });\n  //           }}\n  //         >\n  //           Filter\n  //         </Button>\n  //       </Space>\n  //     </div>\n  //   ),\n  //   filterIcon: filtered => <SearchOutlined style={{ color: filtered ? '#1890ff' : undefined }} />,\n  //   onFilter: (value, record) =>\n  //     record[dataIndex]\n  //       ? record[dataIndex].toString().toLowerCase().includes(value.toLowerCase())\n  //       : '',\n  //   onFilterDropdownVisibleChange: visible => {\n  //     if (visible) {\n  //       setTimeout(() => this.searchInput.select(), 100);\n  //     }\n  //   },\n  //   render: text =>\n  //     this.state.searchedColumn === dataIndex ? (\n  //       <Highlighter\n  //         highlightStyle={{ backgroundColor: '#ffc069', padding: 0 }}\n  //         searchWords={[this.state.searchText]}\n  //         autoEscape\n  //         textToHighlight={text ? text.toString() : ''}\n  //       />\n  //     ) : (\n  //       text\n  //     ),\n  // });\n\n  // handleSearch = (selectedKeys, confirm, dataIndex) => {\n  //   confirm();\n  //   this.setState({\n  //     searchText: selectedKeys[0],\n  //     searchedColumn: dataIndex,\n  //   });\n  // };\n\n  // handleReset = clearFilters => {\n  //   clearFilters();\n  //   this.setState({ searchText: '' });\n  // };\n\n\n  render() {\n    const {combinedResult = [], columnsCombined, columnsCombined1,columnsCombined2, columnsCombined3} = this.state;\n    let columnsC = [ {\n      title: 'Symbol',\n      dataIndex: 'symbol',\n      sorter: (a, b) => a.symbol - b.symbol\n      // ...this.getColumnSearchProps('companyName'),\n    }, {\n      title: 'Company Name',\n      dataIndex: 'name',\n    }, {\n      title: 'Current Portfolio percent',\n      dataIndex: 'current_percent_of_portfolio'\n    }, {\n      title: 'Quarter End Price',\n      dataIndex: 'quarter_end_price'\n    }];\n\n    return (<div className=\"App\">\n          <input type=\"text\" value={this.state.value} placeholder=\"company name\" onChange={this.handleChange}></input>\n          <input type=\"number\" value={this.state.code} placeholder=\"company code\" onChange={this.handleChange}></input>\n\n          <input type=\"button\" value=\"Submit\" onClick={this.handleSubmit} />\n        <br />\n      \n        {combinedResult.length > 0 && <div className=\"fund-name\">Fund Name: {this.state.value.replaceAll('-', ' ').toUpperCase()}</div>}\n  \n        \n      {combinedResult.length > 0 && \n      <div>\n        <div className='table_title'>Table 1: Portfolio weights based on 13F data:</div>\n        <Table bordered pagination={false} columns={columnsCombined} dataSource={combinedResult} />\n      </div>\n      }\n      <br />\n      <br />\n      \n      {combinedResult.length > 0 && \n      <div>\n      <div className='table_title'>Table 2: Change in number of Shares (%):</div>\n      <Table bordered pagination={false} columns={columnsCombined1} dataSource={combinedResult} />\n      </div>\n      }\n      <br />\n      <br />\n      <br />\n      {combinedResult.length > 0 && \n       <div>\n       <div className='table_title'>Table 3: Change in Price (%):</div>\n      <Table bordered pagination={false} columns={columnsCombined3} dataSource={combinedResult} />\n      </div>}\n      <br />\n      <br />\n      \n      {combinedResult.length > 0 && \n       <div>\n       <div className='table_title'>Table 4: Quarter end prices:</div>\n      <Table bordered pagination={false} columns={columnsCombined2} dataSource={combinedResult} />\n      </div>}\n      <br />\n      <br />\n      <br />\n      <br />\n      \n      {this.state.total_mv.length > 0 &&\n       <div>\n       <div className='table_title'>Total mv</div>\n       <Table bordered pagination={false} columns={this.state.totalMvColumns} dataSource={this.state.total_mv} />\n      </div>}\n      <br />\n      <br />\n      {this.state.data.map((item) => {\n        let dataSrc = item.rows;\n      \n        return (<Table columns={columnsC} dataSource={dataSrc} />)\n      })}\n\n\n     \n    </div>)\n  }\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}