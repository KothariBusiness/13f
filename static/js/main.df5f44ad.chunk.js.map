{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","props","state","data","value","loading","columnsCombined","handleChange","bind","handleSubmit","event","this","setState","target","companyName","preventDefault","fetch","mode","then","response","text","html","a","parser","DOMParser","doc","parseFromString","abc","Array","from","getElementById","options","filterQuaters","quarterNames","forEach","item","disabled","innerText","includes","push","Promise","all","map","url","resp","json","result","combinedResult","columnsCombined1","title","dataIndex","onFilter","record","indexOf","name","columnsCombined2","index","fromLast","length","replace","trim","toUpperCase","sorter","b","quartername","quartername_perChangeInShares","quartername_quarterEndPrice","rows","companyItem","perChange","current_percent_of_portfolio","perChangeInShares","percent_shares_change","quarterEndPrice","quarter_end_price","symbol","perchange","toFixed","Object","keys","priceperchange","values","columnsC","className","type","onChange","onClick","replaceAll","bordered","pagination","columns","dataSource","dataSrc","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document"],"mappings":"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","file":"static/js/main.df5f44ad.chunk.js","sourcesContent":["import React from 'react';\nimport { Table, Input, Space, Button } from 'antd';\n// import Highlighter from 'react-highlight-words';\n// import { SearchOutlined } from '@ant-design/icons';\nimport './App.css';\nimport 'antd/dist/antd.css';\nimport data from './data';\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      value: '',\n      loading: false,\n      columnsCombined: []\n    }\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    \n  }\n\n  handleChange(event) {\n    this.setState({value: event.target.value});\n  }\n\n  handleSubmit(event) {\n    let companyName = this.state.value;\n    event.preventDefault();\n\n    this.setState({loading: true})\n    fetch(`https://whalewisdom.com/filer/${companyName}#tabholdings_tab_link`, {mode: 'no-cors'}).then(function (response) {\n      // The API call was successful!\n      return response.text();\n    }).then(async (html) => {\n   \n      // Convert the HTML string into a document object\n      var parser = new DOMParser();\n      var doc = parser.parseFromString(html, 'text/html');\n      var abc = Array.from(doc.getElementById('quarter_one').options)\n\n      let filterQuaters = [];\n      let quarterNames = [];\n      abc.forEach((item) => {\n          if(!item.disabled) {\n            if(!item.innerText.includes('Current Combined')) {\n              // filterQuaters.push(`https://whalewisdom.com/filer/holdings?id=${companyName}&q1=${item.value}&type_filter=1,2,3,4&symbol=&change_filter=&minimum_ranking=&minimum_shares=&is_etf=0&sc=true&sort=current_mv&order=desc&offset=0&limit=99`)\n              //  filterQuaters.push(`https://whalewisdom.com/filer/holdings?id=${companyName}&q1=${item.value}&type_filter=1,2,3,4&sort=current_mv&order=desc&offset=0&limit=100`)\n              filterQuaters.push(`https://whalewisdom.com/filer/holdings?id=${companyName}&q1=${item.value}&sort=current_mv&order=desc&offset=0&limit=99`)\n              quarterNames.push(item.innerText);\n            }\n        }\n      })\n\n    // let quarterNames =  [\"Q1 2021 13F Filings \", \"Q4 2020 13F Filings \", \"Q3 2020 13F Filings \", \"Q2 2020 13F Filings \", \"Q1 2020 13F Filings \", \"Q4 2019 13F Filings \", \"Q3 2019 13F Filings \", \"Q2 2019 13F Filings \"]\n      \n      let result = await Promise.all(filterQuaters.map(async url => {\n        const resp = await fetch(url);\n        return resp.json();\n      }));\n\n      let combinedResult = {};\n      let columnsCombined = [ {\n        title: 'Ticker',\n        dataIndex: 'companyName',\n        // sorter: (a, b) => a.companyName.localeComapare(b.companyName),\n        onFilter: (value, record) => record.companyName.indexOf(value) === 0,\n        // ...this.getColumnSearchProps('companyName'),\n      }, {\n        title: 'Company Name',\n        dataIndex: 'name',\n        // sorter: (a, b) => a.name.localeComapare(b.name),\n        onFilter: (value, record) => record.name.indexOf(value) === 0,\n      }];\n      let columnsCombined1 = [...columnsCombined];\n      let columnsCombined2 = [...columnsCombined];\n      // let result = data;\n      result = result.map((item, index) => {\n        const fromLast = result.length - 1 - index;\n        columnsCombined.push({\n          title: quarterNames[fromLast].replace('13F Filings', '').replace(' ', '').trim('').toUpperCase(),\n          dataIndex: quarterNames[fromLast],\n          sorter: (a, b) => a[quarterNames[fromLast]] - b[quarterNames[fromLast]]\n        })\n        columnsCombined1.push({\n          title: quarterNames[fromLast].replace('13F Filings', '').replace(' ', '').trim('').toUpperCase(),\n          dataIndex: `${quarterNames[fromLast].trim()}_perChangeInShares`,\n          sorter: (a, b) => a[`${quarterNames[fromLast]}_perChangeInShares`] - b[`${quarterNames[fromLast]}_perChangeInShares`]\n        })\n        columnsCombined2.push({\n          title: quarterNames[fromLast].replace('13F Filings', '').replace(' ', '').trim('').toUpperCase(),\n          dataIndex: `${quarterNames[fromLast].trim()}_quarterEndPrice`,\n          sorter: (a, b) => a[`${quarterNames[fromLast]}_quarterEndPrice`] - b[`${quarterNames[fromLast]}_quarterEndPrice`]\n        })\n\n        return {...item, quartername: quarterNames[index], quartername_perChangeInShares: `${quarterNames[index]}_perChangeInShares`,\n        quartername_quarterEndPrice: `${quarterNames[index]}_quarterEndPrice`}\n      });\n\n      const lastCol = columnsCombined.length - 1;\n     /* columnsCombined.push({\n        title: `% Change in Shares ${columnsCombined[lastCol].title} vs ${columnsCombined[lastCol - 1].title}`,\n        dataIndex: 'perchange',\n        sorter: (a, b) => a.perchange - b.perchange\n      }, {\n        title: `% Change in price ${columnsCombined[lastCol].title} vs ${columnsCombined[lastCol - 1].title}`,\n        dataIndex: 'priceperchange',f\n        sorter: (a, b) => a.priceperchange - b.priceperchange\n      }); */\n\n      result.forEach((item, index) => {\n        const data = item.rows;\n\n        data.forEach((companyItem) => {\n          const perChange = companyItem.current_percent_of_portfolio;\n          const perChangeInShares = companyItem.percent_shares_change;\n          const quarterEndPrice = companyItem.quarter_end_price;\n          if(!combinedResult[companyItem.symbol]) {\n\n            \n            combinedResult[companyItem.symbol] = {\n              companyName: companyItem.symbol, \n              name: companyItem.name && companyItem.name.toUpperCase(), \n              perchange: companyItem.percent_shares_change && companyItem.percent_shares_change.toFixed(1)}\n          }\n          combinedResult[companyItem.symbol] = {\n            ...combinedResult[companyItem.symbol], \n            [item.quartername]: perChange && perChange.toFixed(1), \n            [`${item.quartername.trim()}_priceChange`]: quarterEndPrice,\n            [`${item.quartername.trim()}_perChangeInShares`]: perChangeInShares,\n            [`${item.quartername.trim()}_quarterEndPrice`]: quarterEndPrice\n          }\n        });\n        \n      })\n\n      Object.keys(combinedResult).forEach((item) => {\n\n        if(combinedResult[item][quarterNames[0]] && combinedResult[item][quarterNames[1]]) { \n          combinedResult[item] = {\n            ...combinedResult[item],\n            priceperchange: ((combinedResult[item][`${quarterNames[0].trim()}_priceChange`]/combinedResult[item][`${quarterNames[1].trim()}_priceChange`] - 1) * 100).toFixed(1)\n          }\n        } else {\n          delete combinedResult[item].perchange\n        }\n      })\n      this.setState({data: result, loading: false, combinedResult: Object.values(combinedResult), columnsCombined, columnsCombined1, columnsCombined2});      \n\n    })\n\n  }\n\n\n  // getColumnSearchProps = dataIndex => ({\n  //   filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => (\n  //     <div style={{ padding: 8 }}>\n  //       <Input\n  //         ref={node => {\n  //           this.searchInput = node;\n  //         }}\n  //         placeholder={`Search ${dataIndex}`}\n  //         value={selectedKeys[0]}\n  //         onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\n  //         onPressEnter={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\n  //         style={{ marginBottom: 8, display: 'block' }}\n  //       />\n  //       <Space>\n  //         <Button\n  //           type=\"primary\"\n  //           onClick={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\n  //           icon={<SearchOutlined />}\n  //           size=\"small\"\n  //           style={{ width: 90 }}\n  //         >\n  //           Search\n  //         </Button>\n  //         <Button onClick={() => this.handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>\n  //           Reset\n  //         </Button>\n  //         <Button\n  //           type=\"link\"\n  //           size=\"small\"\n  //           onClick={() => {\n  //             confirm({ closeDropdown: false });\n  //             this.setState({\n  //               searchText: selectedKeys[0],\n  //               searchedColumn: dataIndex,\n  //             });\n  //           }}\n  //         >\n  //           Filter\n  //         </Button>\n  //       </Space>\n  //     </div>\n  //   ),\n  //   filterIcon: filtered => <SearchOutlined style={{ color: filtered ? '#1890ff' : undefined }} />,\n  //   onFilter: (value, record) =>\n  //     record[dataIndex]\n  //       ? record[dataIndex].toString().toLowerCase().includes(value.toLowerCase())\n  //       : '',\n  //   onFilterDropdownVisibleChange: visible => {\n  //     if (visible) {\n  //       setTimeout(() => this.searchInput.select(), 100);\n  //     }\n  //   },\n  //   render: text =>\n  //     this.state.searchedColumn === dataIndex ? (\n  //       <Highlighter\n  //         highlightStyle={{ backgroundColor: '#ffc069', padding: 0 }}\n  //         searchWords={[this.state.searchText]}\n  //         autoEscape\n  //         textToHighlight={text ? text.toString() : ''}\n  //       />\n  //     ) : (\n  //       text\n  //     ),\n  // });\n\n  // handleSearch = (selectedKeys, confirm, dataIndex) => {\n  //   confirm();\n  //   this.setState({\n  //     searchText: selectedKeys[0],\n  //     searchedColumn: dataIndex,\n  //   });\n  // };\n\n  // handleReset = clearFilters => {\n  //   clearFilters();\n  //   this.setState({ searchText: '' });\n  // };\n\n\n  render() {\n    const {combinedResult = [], columnsCombined, columnsCombined1,columnsCombined2} = this.state;\n    let columnsC = [ {\n      title: 'Symbol',\n      dataIndex: 'symbol',\n      sorter: (a, b) => a.symbol - b.symbol\n      // ...this.getColumnSearchProps('companyName'),\n    }, {\n      title: 'Company Name',\n      dataIndex: 'name',\n    }, {\n      title: 'Current Portfolio percent',\n      dataIndex: 'current_percent_of_portfolio'\n    }, {\n      title: 'Quarter End Price',\n      dataIndex: 'quarter_end_price'\n    }];\n\n    return (<div className=\"App\">\n          <input type=\"text\" value={this.state.value} onChange={this.handleChange}></input>\n          <input type=\"button\" value=\"Submit\" onClick={this.handleSubmit} />\n      '\n      \n        <br />\n        {combinedResult.length > 0 && <div className=\"fund-name\">Fund Name: {this.state.value.replaceAll('-', ' ').toUpperCase()}</div>}\n  \n      {combinedResult.length > 0 && <Table bordered pagination={false} columns={columnsCombined} dataSource={combinedResult} />}\n      <br />\n      <br />\n      {combinedResult.length > 0 && <Table bordered pagination={false} columns={columnsCombined1} dataSource={combinedResult} />}\n      <br />\n      <br />'\n      <br />\n      {combinedResult.length > 0 && <Table bordered pagination={false} columns={columnsCombined2} dataSource={combinedResult} />}\n      <br />\n      <br />\n      {this.state.data.map((item) => {\n        const dataSrc = item.rows;\n        return (<Table columns={columnsC} dataSource={dataSrc} />)\n      })}\n     \n    </div>)\n  }\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}